buildscript {
    ext.kotlin_version = '1.2.0'
    ext.corePlugin = 'com.jamieswhiteshirt.responsiveinventory.core.LoadingPlugin'
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

allprojects {
    tasks.withType(JavaCompile) {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

version = '1.11.2-1.0.0.0-SNAPSHOT'
group= 'com.jamieswhiteshirt'
archivesBaseName = 'responsiveinventory'

minecraft {
    version = '1.11.2-13.20.0.2296'
    runDir = 'run'

    clientJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]
    serverJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]

    mappings = "snapshot_20170508"
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

repositories {
    maven {
        name 'shadowfacts'
        url 'http://maven.shadowfacts.net/'
    }
    maven {
        url 'http://dl.bintray.com/jetbrains/spek'
    }
    mavenCentral()
}

dependencies {
    compile group: "net.shadowfacts", name: "Forgelin", version: '1.6.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}

idea {
    module {
        inheritOutputDirs = true
    }
    project {
        languageLevel = '1.8'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes "FMLCorePlugin": corePlugin
        attributes "FMLCorePluginContainsFMLMod": "true"
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes "FMLCorePlugin": corePlugin
        attributes "FMLCorePluginContainsFMLMod": "true"
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

